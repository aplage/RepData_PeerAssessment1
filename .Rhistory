at = c(1975,1980,seq(1990,2014,1)),
#c(1975, 1980, 1990, 1994, 1999, 2002, 2007, 2012, 2014),
# labels = as.character(c(1975, 1980, 1990, 1994, 1999, 2002, 2007, 2012, 2014)),
#labels = c('1975', '1980', '1990', '1994', '1999', '2002', '2007', '2012', '2014'),
#labels = c('1975', '1980', '1990', rep('',3), '1994', rep('',4), '1999',
#          rep('', 2),'2002', rep('', 4), '2007', rep('',4), '2012', rep('',2)),
#labels = c('1975', '1980', '1990',"","","",'1994',"","","","",'1999',"","",'2002',"","","","",'2007',"","","","", '2012',"",""),
labels = yearlabel[c(which(!is.na(yearlabel[yearlabel<=1990])),17:40)],
cex.axis = 1.1
)
#box()
legend(#locator(1), # utilizando o locator, pode-se escolher o local de colocação da legenda com o mouse
x = 1986,
y = 90,
c("Herd Prevalence","Animal Prevalence","","Vaccination Coverage"),
cex= 0.80,
lty=c(1, 3, 0, 2),
bty = "n"
)
par(mar=c(5.1,4.1,4.1,2.1))
setwd("F:/vindo Apple/materialanaliseespacialluciana/Graficos")
Year <- c(1975, 1980, 2002, 2012)
Herd <- c(17.7, 20.46, 6.04, 3.60)
upperlimitHerd <-c(19, 21.70, 7.10, 4.42)
lowerlimitHerd <- c(16.40, 19.20, 5.0, 2.76)
Animal <- c(6.30, 6.57, 1.09, 0.81)
upperlimitAnimal <- c(6.72, 6.9, 1.40, 1.10)
lowerlimitAnimal <- c(5.88, 6.30, 0.78, 0.10)
yearlabel <- c(1975, rep(NA,4), 1980, rep(NA,9), 1990, rep(NA,2), 1993, rep(NA,4), 1998, rep(NA,3), 2002, rep(NA,9), 2012, NA, 2014)
# Dados para o segundo eixo y: Cobertura Vacinal
ano <- seq(1990,2014,1)
VaccinationCoverage <- c( 4.210309, 3.477895, 3.118599, 2.610970, 21.029117,
39.381417, 37.748470, 57.097070, 68.797287, 74.240503,
73.418449, 71.329419, 78.489733, 77.562549, 78.462433,
83.083573, 84.649372, 80.472397, 80.401509, 80.952471,
85.417607, 82.238420, 78.323250, 74.419305, 76.628815)
par(mar=c(5.1,6.1,2.1,5.1))
plot(Year, Herd,
type="n",
axes = FALSE,
xlab = "Year",
cex.lab = 1.3,
ylab = "Prevalence (%)",
ylim = c(min(lowerlimitAnimal), 25), # max(upperlimitHerd)),
xlim = c(min(Year), max(ano))
)
lines(Year, Herd,
lwd = 3
)
points(Year, upperlimitHerd,
pch = "_"
)
points(Year, lowerlimitHerd,
pch = "_"
)
lines(Year, Animal,
lty = "dotted",
lwd = 3
)
points(Year, upperlimitAnimal,
pch = "_"
)
points(Year, lowerlimitAnimal,
pch = "_"
)
axis( side = 2,
yaxp = c(0,25,6),
labels = c("0", "5", "10", "15", "20", "25"),
at = seq(0,25,5),
cex.axis = 1.1
)
for(i in 1:length(Year)){
segments(x0=Year[i],x1=Year[i], y0=lowerlimitHerd[i],y1=upperlimitHerd[i],
lwd =2)
}
for(i in 1:length(Year)){
segments(x0=Year[i],x1=Year[i], y0=lowerlimitAnimal[i],y1=upperlimitAnimal[i],
lwd = 2)
}
# Plotting the second y axis
par(new = T) # To draw the second plot on top of the first
plot(ano, VaccinationCoverage,
type="l",
axes = FALSE,
xlab = NA,
cex.lab = 1.3,
ylab = NA,
ylim = c(0, 90), # max(VaccinationCoverage)),
xlim = c(min(Year), max(ano)),
lty = 2,
lwd = 3
)
axis( side = 4,
yaxp = c(0,90,10),
#labels = c("0", "20", "40", "60", "80", "90"),
at = seq(0,90,10),
cex.axis = 1.1)
mtext(side = 4,
line = 3,
cex = 1.3,
'Vaccination Coverage (%)'
)
axis(side = 1,
#xaxp = c(1975,1980,seq(1990,2014,1)),
at = c(1975,1980,seq(1990,2014,1)),
#c(1975, 1980, 1990, 1994, 1999, 2002, 2007, 2012, 2014),
# labels = as.character(c(1975, 1980, 1990, 1994, 1999, 2002, 2007, 2012, 2014)),
#labels = c('1975', '1980', '1990', '1994', '1999', '2002', '2007', '2012', '2014'),
#labels = c('1975', '1980', '1990', rep('',3), '1994', rep('',4), '1999',
#          rep('', 2),'2002', rep('', 4), '2007', rep('',4), '2012', rep('',2)),
#labels = c('1975', '1980', '1990',"","","",'1994',"","","","",'1999',"","",'2002',"","","","",'2007',"","","","", '2012',"",""),
labels = yearlabel[c(which(!is.na(yearlabel[yearlabel<=1990])),17:40)],
cex.axis = 1.1
)
#box()
legend(#locator(1), # utilizando o locator, pode-se escolher o local de colocação da legenda com o mouse
x = 1986,
y = 90,
c("Herd Prevalence","Animal Prevalence","","Vaccination Coverage"),
cex= 0.80,
lty=c(1, 3, 0, 2),
bty = "n"
)
par(mar=c(5.1,4.1,4.1,2.1))
# 1010 550
# 1100 700
dev.copy(png, file="Evolution prevalence vaccination Bru MG.png", width=1010, height=550)
dev.off()
dev.copy(tiff, file="Evolution prevalence vaccination Bru MG.tiff", width=1010, height=550)
dev.off()
getwd
getwd()
setwd("F:/vindo Apple/Reproducible Research/Assigments/Assigment 1")
if(!file.exists("UCI HAR Dataset")) {
temp <- tempfile()
download.file(url,temp)
unzip(temp)
unlink(temp)
}
if(!file.exists("UCI HAR Dataset")) {
temp <- tempfile()
download.file(url,temp)
unzip(temp)
unlink(temp)
}
if(!file.exists("UCI HAR Dataset")) {
temp <- tempfile()
download.file(url,temp)
unzip(temp)
unlink(temp)
}
temp <- tempfile()
download.file(url,temp)
unzip(temp)
unlink(temp)
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
if(!file.exists("UCI HAR Dataset")) {
temp <- tempfile()
download.file(url,temp)
unzip(temp)
unlink(temp)
}
ddir)
dir()
?read.table
activity <- read.table("activity.csv", header = TRUE, sep = ",", dec = ".",
na.strings = "NA", colClasses = c("numeric", "date", "numeric"), stringsAsFactors = FALSE)
na.strings = "NA", colClasses = c("numeric", "Date", "numeric"), stringsAsFactors = FALSE)
activity <- read.table("activity.csv", header = TRUE, sep = ",", dec = ".",
na.strings = "NA", colClasses = c("numeric", "Date", "numeric"), stringsAsFactors = FALSE)
activity
tbl_df(activity)->activity
activity
plot(date, interval)
plot(activity$date, activity$interval)
plot(activity$steps, activity$interval)
plot(activity$date, activity$steps)
plot(activity$interval, activity$steps)
library(knit)
library("knit")
library("knitr")
install.packages("knitr")
library("knitr")
getwd()
setwd("F:/vindo Apple/Reproducible Research/Assigments/Assigment 1/RepData_PeerAssessment1")
require(dplyr)
dir()
hist(activity$steps)
str(activity)
histogram(~activity$steps, factor(activity$date))
histogram(~steps | factor(date), data = activity)
require(lattice)
histogram(~steps | factor(date), data = activity)
histogram(~steps, data = activity)
histogram(~date, data = activity)
plot(~date, data = activity)
activity %>%
group_by(date) %>%
summarise(steps, mean, na.rm = TRUE)
activity %>%
group_by(date) %>%
summarise(mean(steps, na.rm = TRUE))
activity %>%
group_by(date) %>%
summarise(mean(steps, na.rm = TRUE),
median(steps, na.rm = TRUE))
activity %>%
group_by(date) %>%
summarise(#mean(steps, na.rm = TRUE),
median(steps, na.rm = TRUE))
activity %>%
# group_by(date) %>%
summarise(mean(steps, na.rm = TRUE),
median(steps, na.rm = TRUE))
activity %>%
# group_by(date) %>%
summarise(mean(steps, na.rm = TRUE),
# median(steps, na.rm = TRUE)
)
activity %>%
# group_by(date) %>%
summarise(mean(steps, na.rm = TRUE) #,
# median(steps, na.rm = TRUE)
)
activity %>%
# group_by(date) %>%
summarise(mean(steps, na.rm = TRUE),
# median(steps, na.rm = TRUE)
) ->zozo
activity %>%
# group_by(date) %>%
summarise(mean(steps, na.rm = TRUE)#,
# median(steps, na.rm = TRUE)
) ->zozo
zozo
class(zozo)
zozo[1]
zozo[[1]]
activity %>%
# group_by(date) %>%
summarise(mean(steps, na.rm = TRUE),
median(steps, na.rm = TRUE)
) ->zozo
zozo
zozo[1]
zozo[2]
zozo[[2]]
zozo[[1]]
plot(activity$interval,activity$steps)
plot(activity$interval,mean(activity$steps, na.rm = TRUE))
plot(activity$interval)
plot(activity$interval,mean(activity$steps, na.rm = TRUE), type = "l")
plot(mean(activity$interval, na.rm = TRUE),mean(activity$steps, na.rm = TRUE), type = "l")
plot(activity$interval,mean(activity$steps, na.rm = TRUE))
plot(mean(activity$interval, na.rm = TRUE),mean(activity$steps, na.rm = TRUE))
activity %>%
group_by(date) %>%
summarise(mean(steps, na.rm = TRUE)
) -> meanBYdate
meanBYdate
activity %>% filter( date == "2012-10-01")
activity %>% filter( date == "2012-10-01") %>% table(date)
activity %>% filter( date == "2012-10-01") %>% head(date, 200)
activity %>% filter( date == "2012-10-01") %>% head(date)
activity %>% filter( date == "2012-10-01") %>% head(atomic$date)
activity %>% filter( date == "2012-10-01") %>% head(activity$date)
activity %>% filter( date == "2012-10-01")
activity %>% filter( date == "2012-10-01") %>% print(n=40)
activity %>% filter( date == "2012-10-01") %>% n_distinct()
activity %>% filter( date == "2012-10-01") %>% n_distinct(n)
activity %>% filter( date == "2012-10-01") %>% n
activity %>% filter( date == "2012-10-01") %>% summarise(n_distinct(date))
activity %>% filter( date == "2012-10-01") %>% summarise(is.na(date)
)
activity %>% filter( date == "2012-10-01") %>% summarise(count(date))
activity %>% filter( date == "2012-10-01") %>% summarise(length(date))
activity %>% filter( date == "2012-10-01") %>% summarise(which(is.na(date)))
activity %>% filter( date == "2012-10-01") %>% summarise(unique(date))
activity %>% filter( date == "2012-10-01") %>% summarise(unique(steps))
meanBYdate
table(activity$steps,activity$date)
meanBYdate
plot(meanBYdate$date, meanBYdate$mean)
plot(meanBYdate$date, meanBYdate$mean, type = "l")
activity %>%
group_by(interval & date) %>%
summarise(mean(steps, na.rm = TRUE)
) -> meanBYintervalBYdate
activity %>%
group_by(interval,date) %>%
summarise(mean(steps, na.rm = TRUE)
) -> meanBYintervalBYdate
meanBYintervalBYdate
length(meanBYintervalBYdate)
dim(meanBYintervalBYdate)
dim(activity)
activity %>%
group_by(interval) %>%
summarise(mean(steps, na.rm = TRUE)
) -> zozo
zozo
plot(zozo$interval, zozo$mean, type = "l")
60/5
12*24
5*24
120*12
plot(activity$date,activity$interval)
str(activity)
range(activity$interval)
288*61
?quantile
quantile(activity$interval, probs = c(0,0.25,0.5,0.75,1))
2355/61
2355/288
2355/24
plot(activity$interval)
plot(activity$date,activity$interval)
activity %>% gorup_by(date) %>% quantile(activity$interval, probs = c(0,0.25,0.5,0.75,1))
activity %>% group_by(date) %>% quantile(activity$interval, probs = c(0,0.25,0.5,0.75,1))
activity %>% group_by(date) %>% quantile(activity$interval, probs = c(0,0.25,0.5,0.75,1), na.rm = TRUE)
activity %>% group_by(date) %>% summarize(quantile(activity$interval, probs = c(0,0.25,0.5,0.75,1), na.rm = TRUE))
activity %>% group_by(date) %>% summarize(quantile(interval, probs = c(0,0.25,0.5,0.75,1), na.rm = TRUE))
activity %>% group_by(date) %>% summarize(min(interval)
)
activity %>% group_by(date) %>% summarize(range(interval))
activity %>% group_by(date) %>% summarize(max(interval))
histogram(~steps | factor(date), data = activity)
activity %>%
group_by(date) %>%
summarize(sum(steps)) -> TotalStepsPerDay
histogram(~sum, data = TotalStepsPerDay)
TotalStepsPerDay
TotalStepsPerDay$sum
ls()
histogram(~sum, data = TotalStepsPerDay)
dim(TotalStepsPerDay)
TotalStepsPerDay
activity %>%
group_by(date) %>%
summarize(sum(steps)) -> TotalStepsPerDay
histogram(~sum(steps), data = TotalStepsPerDay)
activity %>%
group_by(date) %>%
summarize(sum(steps)) -> TotalStepsPerDay
histogram(~sum, data = TotalStepsPerDay)
TotalStepsPerDay
TotalStepsPerDay$`sum(steps)`
activity %>%
group_by(date) %>%
summarize(sum(steps)) -> TotalStepsPerDay
histogram(~'sum(steps)', data = TotalStepsPerDay)
TotalStepsPerDay$sum
TotalStepsPerDay$sum_.cu
TotalStepsPerDay$sum->cu
cu
histogram(~cu)
names(TotalStepsPerDay)
histogram(~"sum(steps", data = TotalStepsPerDay)
histogram(~"sum(steps)", data = TotalStepsPerDay)
histogram(TotalStepsPerDay$`sum(steps)`)
histogram(~TotalStepsPerDay$`sum(steps)`)
plot(cu)
histogram(~TotalStepsPerDay$`sum(steps)`)
activity %>%
group_by(date) %>%
summarize(sum(steps)) -> TotalStepsPerDay
histogram(~TotalStepsPerDay$`sum(steps)`)
histogram(~steps | factor(date), data = activity)
activity %>%
summarise(mean(steps, na.rm = TRUE),
median(steps, na.rm = TRUE)
) -> meanANDmedian
meanANDmedian
meanANDmedian[[1]]
meanANDmedian[[2]]
meanBYdate
activity %>%
group_by(interval) %>%
summarise(mean(steps, na.rm = TRUE)
) -> meanStepsBYinterval
meanStepsBYinterval
table(activity$interval)
dim*table(activity$interval))
dim(table(activity$interval))
activity %>% mutate(HM = hm(interval))
require(lubridate)
activity %>% mutate(HM = hm(interval))
activity %>% mutate(HM = hm(interval)) %>% filter(interval == 2335)
hm(2335)
hm(23:35)
hm("2335")
hm("23:35")
activity %>% mutate(HM = hm(interval)) %>% filter(interval < 1000)
activity
length(activity$interval[1])
length(activity$interval[3])
nchar(activity$interval[3])
nchar(activity$interval[1])
nchar(activity$interval[15])
as.character(activity$interval)
as.character(activity$interval)[1]
as.character(activity$interval)[15]
as.character(activity$interval)[150]
nchar(as.character(activity$interval)[150])
nchar(as.character(activity$interval)[15])
nchar(as.character(activity$interval)[1])
nchar(as.character(activity$interval)[1000])
rep(0,4-nchar(as.character(activity$interval)[1000]))
rep(0,4-nchar(as.character(activity$interval)[100]))
rep(0,4-nchar(as.character(activity$interval)[10]))
rep(0,4-nchar(as.character(activity$interval)[1]))
rep("0",4-nchar(as.character(activity$interval)[1]))
paste(rep("0",4-nchar(as.character(activity$interval)[1])), sep="")
paste(rep(0,4-nchar(as.character(activity$interval)[1])), sep="")
paste(rep(0,4-nchar(as.character(activity$interval)[51])), sep="")
paste(rep(0,4-nchar(as.character(activity$interval)[15])), sep="")
paste(rep(0,4-nchar(as.character(activity$interval)[10])), sep="")
for(i in set_along(activity$interval)){
if(nchar(activity$interval[i]) == 1){
activity$interval[i] <- paste("000", activity$interval[i], sep = "")
} else if(nchar(activity$interval[i]) == 2){
activity$interval[i] <- paste("00", activity$interval[i], sep = "")
} else if(nchar(activity$interval[i]) == 1){
activity$interval[i] <- paste("0", activity$interval[i], sep = "")
}
}
for(i in seq_along(activity$interval)){
if(nchar(activity$interval[i]) == 1){
activity$interval[i] <- paste("000", activity$interval[i], sep = "")
} else if(nchar(activity$interval[i]) == 2){
activity$interval[i] <- paste("00", activity$interval[i], sep = "")
} else if(nchar(activity$interval[i]) == 1){
activity$interval[i] <- paste("0", activity$interval[i], sep = "")
}
}
activity$interval
for(i in seq_along(activity$interval)){
if(nchar(activity$interval[i]) == 1){
activity$interval[i] <- paste("000", activity$interval[i], sep = "")
} else if(nchar(activity$interval[i]) == 2){
activity$interval[i] <- paste("00", activity$interval[i], sep = "")
} else if(nchar(activity$interval[i]) == 3){
activity$interval[i] <- paste("0", activity$interval[i], sep = "")
}
}
activity$interval
x <- 10 ^ (0:5)
X
x
activity <- read.table("activity.csv",
header = TRUE,
sep = ",",
dec = ".",
na.strings = "NA",
colClasses = c("numeric", "Date", "numeric"),
stringsAsFactors = FALSE)
getwd()
dir()
if(!file.exists("activity.csv")) {
unzip("activity.zip")
# unlink(temp)
}
activity <- read.table("activity.csv",
header = TRUE,
sep = ",",
dec = ".",
na.strings = "NA",
colClasses = c("numeric", "Date", "numeric"),
stringsAsFactors = FALSE)
activity$interval
hm("2305")
activity %>%
mutate(
hm == intreval
)
sprintf("%04d", hm)
activity %>%
mutate(
hm == interval
)
sprintf("%04d", hm)
activity %>%
mutate(
hm = interval
)
sprintf("%04d", hm)
activity %>%
mutate(
hm = interval
) -> activity
sprintf("%04d", hm)
names(activity)
activity$hm
class(activity$hm)
sprintf("%04d", hm)
sprintf("%04d", as.charcter(hm))
sprintf("%04d", as.character(hm))
activity %>%
mutate(
hm = as.character(interval)
) -> activity
sprintf("%04d", hm)
class(activity$hm)
activity$hm
sprintf("%04d%", activity$hm)
x
gsub("^[0-9]{2}", \\:\\, "2305")
gsub("^[0-9]{2}", "\\:\\", "2305")
gsub("^[0-9]{2}", "\\1:\\2", "2305")
gsub("^[0-9]{2}", "\\^[0-9]{2}:\\2", "2305")
Q()
q()
